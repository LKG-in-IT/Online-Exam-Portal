@model OEP.Core.DomainModels.Identity.ApplicationUser

@{
    Layout = "";

}

@using (Html.BeginForm("UserProfile", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <fieldset>
            <legend>Personal Information</legend>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form -control", @checked = true } })Male
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form -control", @checked = true } })Female

                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DatOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DatOfBirth, String.Format("{0:d}", Model.DatOfBirth.ToShortDateString()), new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.DatOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img src="@(!string.IsNullOrEmpty(Model.ProfilePicture) ? Model.ProfilePicture : "/Uploads/female-user-avatar.png")" class="img-profile" id="profil-picture"/>
                    <br /><br />
                    @if (!string.IsNullOrEmpty(Model.ProfilePicture))
                    {
                        
                        <input type="button" id="removeImage" class="btn btn-danger" style="margin: 10px 0 10px 0;" value="Remove" />
                    }

                    <input type="file" class="file-upload-image" name="file" id="file" onchange="loadFile(event)" />

                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </fieldset>
    </div>
}


<style>
    .img-profile {
        width: 150px;
        height: 150px;
        border-radius: 75px;
    }
    .text-success {
    color: #f9f9f9;
    background: #74a57c;
    padding: 12px;
}
</style>



