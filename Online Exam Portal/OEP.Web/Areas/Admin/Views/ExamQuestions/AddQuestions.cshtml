@model OEP.Resources.Admin.ExamQuestionViewModel
    @using  System.Web.Optimization
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";
}

<h2>Add or Remove Question for @Model.ExamName</h2>

<div class="form-group">
    <label class="control-label col-md-2">Choose Question</label>
    <div class="col-md-8">
        <input id="txtquestions" class="form-control"/>
    </div>
    <div class="col-md-1">
        <button class="btn btn-danger" id="clear-input">Clear</button>
    </div>
    <div class="col-md-1">
        <button class="btn btn-success" id="add-item">Add</button>
    </div>
</div>

<div id="table-container">
    @Html.Partial("ExamQuestionsList",Model.ExamQuestionResourceList)
</div>


@section Scripts {
    <link href="~/Areas/Admin/Assets/plugins/easy-autocomplete/easy-autocomplete.css" rel="stylesheet"/>
    <script src="~/Areas/Admin/Assets/plugins/easy-autocomplete/jquery.easy-autocomplete.js"></script>
    <script src="~/Areas/Admin/Assets/plugins/easy-autocomplete/jquery.easy-autocomplete.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function() {

            var selectedItem = {};
            /**/
            var options = {
                url: function(phrase) {
                    return "/Admin/ExamQuestions/GetQuestions?phrase=" + phrase + "";
                },

                getValue: "Question",
                placeholder: "Type here to search questions and Use Add button to add it to list",

                list: {
                    match: {
                        enabled: false
                    },
                    maxNumberOfElements: 10,
                    showAnimation: {
                        type: "fade", //normal|slide|fade
                        time: 400,
                        callback: function() {}
                    },

                    hideAnimation: {
                        type: "slide", //normal|slide|fade
                        time: 400,
                        callback: function() {}
                    },
                    onClickEvent: function() {
                        var index = $("#txtquestions").getSelectedItemIndex();
                        selectedItem = $("#txtquestions").getItemData(index);
                        //console.log($("#txtquestions").getItemData(index));
                    }
                },

                theme: "square"
            };

            $("#txtquestions").easyAutocomplete(options);

            /**/

            $('#clear-input').click(function() {
                $("#txtquestions").val('');
            });

            $('#add-item').click(function() {
                var selectedText = $("#txtquestions").val();
                if (selectedText !== undefined && selectedText !== "") {
                    var examQuestionResource = {};
                    examQuestionResource.ExamId = @Model.ExamId;
                    examQuestionResource.QuestionId = selectedItem.Id;
                    $.post("/Admin/ExamQuestions/AddQuestions", examQuestionResource, function(data) {
                        var responseObj = JSON.parse(data);
                        if (responseObj.Status === "Success") {
                            $("#table-container").html(responseObj.Result);
                        }else if (responseObj.Status === "Exist") {
                            alert(responseObj.Message);
                        }

                    });
                    console.log(selectedItem);
                    $("#txtquestions").val('');
                }
                //
            });

            $(document).on('click', '#deleteQuestion', function(e) {
                e.preventDefault();
                $.post($(this).attr('href'), function(response) {
                    var responseObj = JSON.parse(response);
                    if (responseObj.Status === "Success") {
                        $("#table-container").html(responseObj.Result);
                    }else if (responseObj.Status === "NotExist") {
                        alert(responseObj.Message);
                    }

                });
            });

           
        });
    </script>
}

